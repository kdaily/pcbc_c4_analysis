"""This only runs on belltown/sodo, a Sage Bionetworks cluster.

"""

import os
import csv

# For running synapse client, which requires python 2
PY2VIRTENV = "/home/ubuntu/.virtualenvs/python2/bin/activate"

SAMPLE_FILE = list(csv.DictReader(open("./input/sample_table.csv")))
# SAMPLE_FILE = SAMPLE_FILE

SAMPLE_DICT = dict([(x["UID"], x) for x in SAMPLE_FILE])

BOWTIE_TRANSCRIPTS = "./input/transcripts/bowtie/hg19_knownGene"
TARGET_FILE = "./input/transcripts/hg19_knownGene.fasta"

# For provenance
BOWTIE2_SYNID = "syn3270408"
EXPRESS_SYNID = "syn2243152"

def get_filename(wildcards):
    try:
        filename = SAMPLE_DICT[wildcards[0]]['fileName']
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return filename

def get_mapped_synid(wildcards):
    try:
        synid = SAMPLE_DICT[wildcards[0]]['mapped_bam']
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return synid

def get_unmapped_synid(wildcards):
    try:
        synid = SAMPLE_DICT[wildcards[0]]['unmapped_bam']
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return synid

def get_sample_info(wildcards):
    try:
        info = SAMPLE_DICT[wildcards[0]]
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return info

rule all:
     input: expand('./output/eXpress/ucsc/{sample}_results.xprs', sample=SAMPLE_DICT.keys())

rule process:
    input: './input/samples/{sample}.txt'
    output: './output/eXpress/ucsc/{sample}_results.xprs',
    params: batch='-pe orte 1',python2virtenv=PY2VIRTENV,sample='{sample}',mapped_bam=get_mapped_synid,scratchdir="/tmp",unmapped_bam=get_unmapped_synid
    threads: 8
    shell: """## setup
         mkdir -p {params.scratchdir}/{params.sample}/ ; \

         # Get files from synapse
	     source {params.python2virtenv}; \
         synapse get {params.mapped_bam} --downloadLocation {params.scratchdir}/{params.sample}/ ; \
         synapse get {params.unmapped_bam} --downloadLocation {params.scratchdir}/{params.sample}/ ; \
    	 deactivate ; \

	     # Work
         samtools index {params.scratchdir}/{params.sample}/{params.sample}.bam ; \
         samtools index {params.scratchdir}/{params.sample}/unmapped.bam ; \

         # Count mapped, pass qc reads
         samtools
	     bowtie -p {threads} -aS {params.bowtie_transcripts} <(gunzip -c {params.scratchdir}/{params.sample}/fastq/{params.filename}) | express --no-update-check --output-dir {params.scratchdir}/{params.sample}/eXpress/ {params.target_file} ; \

	     ## cleanup
	     rm -rf {params.scratchdir}/{params.sample}/

         """
