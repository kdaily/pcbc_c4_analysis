"""This only runs on belltown/sodo, a Sage Bionetworks cluster.

"""

import os
import csv

# For running synapse client, which requires python 2
PY2VIRTENV = "/home/ubuntu/.virtualenvs/python2/bin/activate"

SAMPLE_FILE = list(csv.DictReader(open("./input/sample_table.csv")))
SAMPLE_FILE = SAMPLE_FILE[:10]

SAMPLE_DICT = dict([(x["UID"], x) for x in SAMPLE_FILE])

def get_filename(wildcards):
    try:
        filename = '%s.bam' % SAMPLE_DICT[wildcards[0]]['UID']
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return filename

def get_mapped_synid(wildcards):
    try:
        synid = SAMPLE_DICT[wildcards[0]]['mapped_bam']
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return synid

def get_unmapped_synid(wildcards):
    try:
        synid = SAMPLE_DICT[wildcards[0]]['unmapped_bam']
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return synid

def get_sample_info(wildcards):
    try:
        info = SAMPLE_DICT[wildcards[0]]
    except Exception as e:
        print(e)
        print(wildcards)
        raise(e)

    return info

rule all:
     input: expand('output/{uid}.txt', uid=SAMPLE_DICT.keys())

rule process:
    input: './input/samples/{uid}.txt'
    output: final="output/{uid}.txt",bai='/tmp/{uid}/{uid}.bam.bai'
    params: batch='-pe orte 1',python2virtenv=PY2VIRTENV,uid='{uid}',mapped_bam=get_mapped_synid,scratchdir="/tmp",unmapped_bam=get_unmapped_synid
    threads: 8
    shell: """## setup
         mkdir -p {params.scratchdir}/{params.uid}/ ; \

         # Get files from synapse
	     source {params.python2virtenv}; \
         synapse get {params.mapped_bam} --downloadLocation {params.scratchdir}/{params.uid}/ ; \
         synapse get {params.unmapped_bam} --downloadLocation {params.scratchdir}/{params.uid}/ ; \
    	 deactivate ; \

	     # Work
         samtools index {params.scratchdir}/{params.uid}/{params.uid}.bam ; \
         samtools index {params.scratchdir}/{params.uid}/unmapped.bam ; \

         # Count mapped, pass qc reads
         samtools

	     ## cleanup
	     rm -rf {params.scratchdir}/{params.uid}/

         """

    return info
